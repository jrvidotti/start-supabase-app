/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthedRouteImport } from './routes/_authed'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthedMyPostsRouteImport } from './routes/_authed/my-posts'
import { Route as AuthSignupSuccessRouteImport } from './routes/_auth/signup-success'
import { Route as AuthSignupRouteImport } from './routes/_auth/signup'
import { Route as AuthLogoutRouteImport } from './routes/_auth/logout'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'
import { Route as AuthedMyPostsIndexRouteImport } from './routes/_authed/my-posts.index'
import { Route as AuthedMyPostsPostIdRouteImport } from './routes/_authed/my-posts.$postId'
import { Route as AuthAuthCallbackRouteImport } from './routes/_auth/auth.callback'

const AuthedRoute = AuthedRouteImport.update({
  id: '/_authed',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedMyPostsRoute = AuthedMyPostsRouteImport.update({
  id: '/my-posts',
  path: '/my-posts',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthSignupSuccessRoute = AuthSignupSuccessRouteImport.update({
  id: '/_auth/signup-success',
  path: '/signup-success',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/_auth/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLogoutRoute = AuthLogoutRouteImport.update({
  id: '/_auth/logout',
  path: '/logout',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/_auth/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedMyPostsIndexRoute = AuthedMyPostsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthedMyPostsRoute,
} as any)
const AuthedMyPostsPostIdRoute = AuthedMyPostsPostIdRouteImport.update({
  id: '/$postId',
  path: '/$postId',
  getParentRoute: () => AuthedMyPostsRoute,
} as any)
const AuthAuthCallbackRoute = AuthAuthCallbackRouteImport.update({
  id: '/_auth/auth/callback',
  path: '/auth/callback',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof AuthLoginRoute
  '/logout': typeof AuthLogoutRoute
  '/signup': typeof AuthSignupRoute
  '/signup-success': typeof AuthSignupSuccessRoute
  '/my-posts': typeof AuthedMyPostsRouteWithChildren
  '/auth/callback': typeof AuthAuthCallbackRoute
  '/my-posts/$postId': typeof AuthedMyPostsPostIdRoute
  '/my-posts/': typeof AuthedMyPostsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof AuthLoginRoute
  '/logout': typeof AuthLogoutRoute
  '/signup': typeof AuthSignupRoute
  '/signup-success': typeof AuthSignupSuccessRoute
  '/auth/callback': typeof AuthAuthCallbackRoute
  '/my-posts/$postId': typeof AuthedMyPostsPostIdRoute
  '/my-posts': typeof AuthedMyPostsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authed': typeof AuthedRouteWithChildren
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/logout': typeof AuthLogoutRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/_auth/signup-success': typeof AuthSignupSuccessRoute
  '/_authed/my-posts': typeof AuthedMyPostsRouteWithChildren
  '/_auth/auth/callback': typeof AuthAuthCallbackRoute
  '/_authed/my-posts/$postId': typeof AuthedMyPostsPostIdRoute
  '/_authed/my-posts/': typeof AuthedMyPostsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/logout'
    | '/signup'
    | '/signup-success'
    | '/my-posts'
    | '/auth/callback'
    | '/my-posts/$postId'
    | '/my-posts/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/logout'
    | '/signup'
    | '/signup-success'
    | '/auth/callback'
    | '/my-posts/$postId'
    | '/my-posts'
  id:
    | '__root__'
    | '/'
    | '/_authed'
    | '/_auth/login'
    | '/_auth/logout'
    | '/_auth/signup'
    | '/_auth/signup-success'
    | '/_authed/my-posts'
    | '/_auth/auth/callback'
    | '/_authed/my-posts/$postId'
    | '/_authed/my-posts/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthedRoute: typeof AuthedRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
  AuthLogoutRoute: typeof AuthLogoutRoute
  AuthSignupRoute: typeof AuthSignupRoute
  AuthSignupSuccessRoute: typeof AuthSignupSuccessRoute
  AuthAuthCallbackRoute: typeof AuthAuthCallbackRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed/my-posts': {
      id: '/_authed/my-posts'
      path: '/my-posts'
      fullPath: '/my-posts'
      preLoaderRoute: typeof AuthedMyPostsRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_auth/signup-success': {
      id: '/_auth/signup-success'
      path: '/signup-success'
      fullPath: '/signup-success'
      preLoaderRoute: typeof AuthSignupSuccessRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/logout': {
      id: '/_auth/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof AuthLogoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed/my-posts/': {
      id: '/_authed/my-posts/'
      path: '/'
      fullPath: '/my-posts/'
      preLoaderRoute: typeof AuthedMyPostsIndexRouteImport
      parentRoute: typeof AuthedMyPostsRoute
    }
    '/_authed/my-posts/$postId': {
      id: '/_authed/my-posts/$postId'
      path: '/$postId'
      fullPath: '/my-posts/$postId'
      preLoaderRoute: typeof AuthedMyPostsPostIdRouteImport
      parentRoute: typeof AuthedMyPostsRoute
    }
    '/_auth/auth/callback': {
      id: '/_auth/auth/callback'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthAuthCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface AuthedMyPostsRouteChildren {
  AuthedMyPostsPostIdRoute: typeof AuthedMyPostsPostIdRoute
  AuthedMyPostsIndexRoute: typeof AuthedMyPostsIndexRoute
}

const AuthedMyPostsRouteChildren: AuthedMyPostsRouteChildren = {
  AuthedMyPostsPostIdRoute: AuthedMyPostsPostIdRoute,
  AuthedMyPostsIndexRoute: AuthedMyPostsIndexRoute,
}

const AuthedMyPostsRouteWithChildren = AuthedMyPostsRoute._addFileChildren(
  AuthedMyPostsRouteChildren,
)

interface AuthedRouteChildren {
  AuthedMyPostsRoute: typeof AuthedMyPostsRouteWithChildren
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedMyPostsRoute: AuthedMyPostsRouteWithChildren,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthedRoute: AuthedRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
  AuthLogoutRoute: AuthLogoutRoute,
  AuthSignupRoute: AuthSignupRoute,
  AuthSignupSuccessRoute: AuthSignupSuccessRoute,
  AuthAuthCallbackRoute: AuthAuthCallbackRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
